# ********RoostGPT********

# Test generated by RoostGPT for test sampleArtilleryEnv2 using AI Type  and AI Model 
# 
# Feature file generated for /productOrder_post for http method type POST 
# RoostTestHash=98c6afd708
# 
# 

# ********RoostGPT********
Feature: Request Opening Order API Testing

  Background:
    * def urlBase = karate.properties['nnnn_URL_BASE'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * configure headers = { Authorization: #(karate.properties['nnnn_AUTH_TOKEN']) }

  Scenario Outline: Test POST /productOrder with valid inputs
    Given path '/productOrder'
    And request
      """
      <payload>
      """
    When method post
    Then status 201
    And match response ==
      """
      <expectedResponse>
      """
    And match response.control.type == 'S'
    And match response.order.id == '#string'

    Examples:
      | read('productOrder_post.csv') |

  Scenario: Test POST /productOrder with invalid catalogID
    Given path '/productOrder'
    And request
      """
      { "order": { "type": "Instalacao", "infraType": "FTTH", "correlationOrder": "10", "associatedDocument": "VTT001", "associatedDocumentDate": "2021-06-09T18:20:53-03:00", "customer": { "name": "Sandbox V.tal", "subscriberId": "SVTAL001" }, "appointment": { "hasSlot": true, "mandatoryType": "Obrigatorio" }, "addresses": { "address": { "id": 14393, "inventoryId": "1766156" } }, "products": { "product": [{ "action": "adicionar", "catalogId": "WRONG_ID" }] } }
      """
    When method post
    Then status 400
    And match response ==
      """
      { "control": { "code": "400", "message": "Campo Catalog ID fora do padr√£o esperado", "type": "E" } }
      """

  Scenario: Test GET /productOrder unauthorized access
    Given path '/productOrder'
    When method get
    Then status 401
    And match response ==
      """
      { "control": { "code": "401", "message": "Unauthorized", "type": "E" } }
      """

  Scenario: Test DELETE /productOrder not found
    Given path '/productOrder', 'nonexistentID'
    When method delete
    Then status 404
    And match response ==
      """
      { "control": { "code": "404", "message": "Not Found", "type": "E" } }
      """
