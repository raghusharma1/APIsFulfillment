# ********RoostGPT********

# Test generated by RoostGPT for test sampleArtilleryEnv2 using AI Type  and AI Model 
# 
# Feature file generated for /productOrder_post for http method type POST 
# RoostTestHash=98c6afd708
# 
# 

# ********RoostGPT********
Feature: Product Order Management

  Background:
    * def urlBase = karate.properties['nnnn_URL_BASE'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * configure headers = { Authorization: #(karate.properties['nnnn_AUTH_TOKEN']) }

  Scenario Outline: Create a new product order with valid data
    Given path '/productOrder'
    And request
      """
      <requestBody>
      """
    When method post
    Then status 201
    And match response ==
      """
      <expectedResponse>
      """

    Examples:
      | read('productOrder_post.csv') |

  Scenario Outline: Create a new product order with invalid catalog ID
    Given path '/productOrder'
    And request
      """
      <requestBody>
      """
    When method post
    Then status 400
    And match response ==
      """
      <expectedResponse>
      """

    Examples:
      | requestBody                                                                                                                        | expectedResponse                                                                                     |
      | { "order": { "associatedDocument": "VTT001", "associatedDocumentDate": "2020-10-22T14:00:00-03:00", "correlationOrder": "2310" } } | { "control": { "code": "400", "message": "Campo Catalog ID fora do padrão esperado", "type": "E" } } |

  Scenario Outline: Unauthorized access attempt
    Given path '/productOrder'
    And request
      """
      <requestBody>
      """
    When method post
    Then status 401
    And match response ==
      """
      <expectedResponse>
      """

    Examples:
      | requestBody                                                                                                                        | expectedResponse                                                         |
      | { "order": { "associatedDocument": "VTT001", "associatedDocumentDate": "2020-10-22T14:00:00-03:00", "correlationOrder": "2310" } } | { "control": { "code": "401", "message": "Unauthorized", "type": "E" } } |

  Scenario Outline: Create a product order with a subscriber ID already existing
    Given path '/productOrder'
    And request
      """
      <requestBody>
      """
    When method post
    Then status 406
    And match response ==
      """
      <expectedResponse>
      """

    Examples:
      | requestBody                                                                                                                        | expectedResponse                                                                                                                               |
      | { "order": { "associatedDocument": "VTT001", "associatedDocumentDate": "2020-10-22T14:00:00-03:00", "correlationOrder": "2310" } } | { "control": { "code": "406", "message": "Not Acceptable (Identificador da instalação [subscriberId] já existente/instalado)", "type": "E" } } |
