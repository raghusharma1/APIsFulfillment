# ********RoostGPT********

# Test generated by RoostGPT for test sampleArtilleryEnv2 using AI Type  and AI Model 
# 
# Feature file generated for /productOrder_post for http method type POST 
# RoostTestHash=98c6afd708
# 
# 

# ********RoostGPT********
Feature: Test the productOrder API for various scenarios

  Background:
    * def urlBase = karate.properties['nnnn_URL_BASE'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * configure headers = { Authorization: #(karate.properties['nnnn_AUTH_TOKEN']) }

  Scenario Outline: Test POST request with valid input for <OrderType>
    Given path '/productOrder'
    And request
      """
      <payload>
      """
    When method post
    Then status 201
    And match response ==
      """
      <expectedResponse>
      """

    Examples:
      | read('productOrder_post.csv') |

  Scenario Outline: Test POST request with invalid input for <OrderType>
    Given path '/productOrder'
    And request
      """
      <payload>
      """
    When method post
    Then status <statusCode>
    And match response ==
      """
      <expectedResponse>
      """

    Examples:
      | OrderType              | payload| statusCode | expectedResponse                                                                                   |
      | 'Invalid Catalog ID'   | { "order": {"associatedDocument":"VTT001","associatedDocumentDate":"2020-10-22T14:00:00-03:00","correlationOrder":"2310","customer":{"businessUnity":"empresarial","fantasyName":"InterCorp Internet","name":"V.tal","phoneNumber":{"phoneNumbers":["21965400000","",""]},"subscriberId":"SVTAL001","workContact":{"email":"sindicovtal@vtal.com","name":"sindico Vtal","phone":"21999900000"}},"equipments":{"equipment":[{"action":"adicionar","code":616551,"serialNumber":"ALCLF718RF05","type":"ONT"}]},"infraType":"FTTP","type":"AssociarCPE"} } |        400 | { "control": {"code": "400", "message": "Campo Catalog ID fora do padr√£o esperado", "type": "E"} } |
      | 'Unauthorized request' | { "order": {"associatedDocument":"VTT001","associatedDocumentDate":"2020-10-22T14:00:00-03:00","correlationOrder":"2310","customer":{"businessUnity":"empresarial","fantasyName":"InterCorp Internet","name":"V.tal","phoneNumber":{"phoneNumbers":["21965400000","",""]},"subscriberId":"SVTAL001","workContact":{"email":"sindicovtal@vtal.com","name":"sindico Vtal","phone":"21999900000"}},"equipments":{"equipment":[{"action":"adicionar","code":616551,"serialNumber":"ALCLF718RF05","type":"ONT"}]},"infraType":"FTTP","type":"AssociarCPE"} } |        401 | { "control": {"code": "401", "message": "Unauthorized", "type": "E"} }                             |
