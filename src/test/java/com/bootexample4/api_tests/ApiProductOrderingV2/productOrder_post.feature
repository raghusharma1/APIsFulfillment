# ********RoostGPT********

# Test generated by RoostGPT for test sampleArtilleryEnv2 using AI Type  and AI Model 
# 
# Feature file generated for /productOrder_post for http method type POST 
# RoostTestHash=98c6afd708
# 
# 

# ********RoostGPT********
Feature: Product Order Management

  Background:
    * def urlBase = karate.properties['nnnn_URL_BASE'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * configure headers = { Authorization: #(karate.properties['nnnn_AUTH_TOKEN']) }

  Scenario Outline: Create a new product order with valid data
    Given path '/productOrder'
    And request
      """
      <requestBody>
      """
    When method post
    Then status 201
    And match response.control == { code: '201', message: 'Created', type: 'S' }
    And match response.order.id == '#string'

    Examples:
      | read('productOrder_post.csv') |

  Scenario Outline: Create a new product order with invalid data - BadRequest
    Given path '/productOrder'
    And request
      """
      <requestBody>
      """
    When method post
    Then status 400
    And match response.control == { code: '400', message: '#string', type: 'E' }

    Examples:
      | requestBody|
      | { "order": { "associatedDocument": "VTT001", "associatedDocumentDate": "2020-10-22T14:00:00-03:00", "correlationOrder": "2310", "customer": { "businessUnity": "empresarial", "fantasyName": "InterCorp Internet", "name": "V.tal", "phoneNumber": { "phoneNumbers": ["21965400000", "", ""] }, "subscriberId": "SVTAL001", "workContact": { "email": "sindicovtal@vtal.com", "name": "sindico Vtal", "phone": "21999900000" } }, "equipments": { "equipment": [{ "action": "adicionar", "code": 616551, "serialNumber": "ALCLF718RF05", "type": "ONT" }] }, "infraType": "FTTP", "type": "InvalidType" } } |

  Scenario: Unauthorized access when missing token
    Given path '/productOrder'
    And request { "order": { "associatedDocument": "VTT001", "associatedDocumentDate": "2020-10-22T14:00:00-03:00", "correlationOrder": "2310" } }
    When method post
    Then status 401
    And match response == { control: { code: '401', message: 'Unauthorized', type: 'E' } }

  Scenario: Service unavailable
    Given path '/productOrder'
    And request { "order": { "associatedDocument": "VTT001", "associatedDocumentDate": "2020-10-22T14:00:00-03:00", "correlationOrder": "2310" } }
    When method post
    Then status 503
    And match response == { control: { code: '503', message: 'Service Unavailable', type: 'T' } }
