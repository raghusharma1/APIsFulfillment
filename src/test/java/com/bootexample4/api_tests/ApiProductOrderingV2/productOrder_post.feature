# ********RoostGPT********

# Test generated by RoostGPT for test sampleArtilleryEnv2 using AI Type  and AI Model 
# 
# Feature file generated for /productOrder_post for http method type POST 
# RoostTestHash=98c6afd708
# 
# 

# ********RoostGPT********
Feature: Test the /productOrder API endpoint

  Background:
    * def urlBase = karate.properties['nnnn_URL_BASE'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * configure headers = { Authorization: #(karate.properties['nnnn_AUTH_TOKEN']) }

  Scenario Outline: Test POST /productOrder with various valid payloads
    Given path '/productOrder'
    And request <payload>
    When method post
    Then status 201
    And match response == <expectedResponse>

    Examples:
      | read('productOrder_post.csv') |

  Scenario: Test POST /productOrder with invalid payload
    Given path '/productOrder'
    And request read('classpath:examples/Invalid Payload.json')
    When method post
    Then status 400
    And match response == { "control": { "code": "400", "message": "Bad Request", "type": "E" } }

  Scenario: Test GET /productOrder unauthorized access
    Given path '/productOrder'
    And header Authorization = 'InvalidToken'
    When method get
    Then status 401
    And match response == { "control": { "code": "401", "message": "Unauthorized", "type": "E" } }

  Scenario: Test DELETE /productOrder for existing resource
    Given path '/productOrder/20230315000001'
    When method delete
    Then status 204

  Scenario: Test GET /productOrder non-existing resource
    Given path '/productOrder/999999999'
    When method get
    Then status 404
    And match response == { "control": { "code": "404", "message": "Not Found", "type": "E" } }
