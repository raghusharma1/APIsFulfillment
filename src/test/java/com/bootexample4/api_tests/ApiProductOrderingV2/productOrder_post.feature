# ********RoostGPT********

# Test generated by RoostGPT for test sampleArtilleryEnv2 using AI Type  and AI Model 
# 
# Feature file generated for /productOrder_post for http method type POST 
# RoostTestHash=98c6afd708
# 
# 

# ********RoostGPT********
Feature: Request Opening Order API Testing

  Background:
    * def urlBase = karate.properties['nnnn_URL_BASE'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * configure headers = { Authorization: #(karate.properties['nnnn_AUTH_TOKEN']) }

  Scenario Outline: Test POST /productOrder with valid payloads
    Given path '/productOrder'
    And request <payload>
    When method post
    Then status 201
    And match response == <expectedResponse>
    And match response contains { order: { id: '#string' } }

    Examples:
      | read('productOrder_post.csv') |

  Scenario Outline: Test POST /productOrder with invalid payloads
    Given path '/productOrder'
    And request <payload>
    When method post
    Then status 400
    And match response == <expectedResponse>

    Examples:
      | payload                                | expectedResponse                         |
      | read('examples/invalid-payload1.json') | read('responses/invalid-response1.json') |
      | read('examples/invalid-payload2.json') | read('responses/invalid-response2.json') |

  Scenario Outline: Test POST /productOrder unauthorized access
    Given path '/productOrder'
    And request <payload>
    When method post
    Then status 401
    And match response == <expectedResponse>

    Examples:
      | payload                              | expectedResponse                                                 |
      | read('examples/valid-payload1.json') | { control: { code: '401', message: 'Unauthorized', type: 'E' } } |

  Scenario Outline: Test POST /productOrder with not acceptable payloads
    Given path '/productOrder'
    And request <payload>
    When method post
    Then status 406
    And match response == <expectedResponse>

    Examples:
      | payload                                       | expectedResponse                                |
      | read('examples/not-acceptable-payload1.json') | read('responses/not-acceptable-response1.json') |
      | read('examples/not-acceptable-payload2.json') | read('responses/not-acceptable-response2.json') |

  Scenario Outline: Test POST /productOrder with server error
    Given path '/productOrder'
    And request <payload>
    When method post
    Then status 500
    And match response == <expectedResponse>

    Examples:
      | payload                              | expectedResponse                                                          |
      | read('examples/valid-payload1.json') | { control: { code: '500', message: 'Internal Server Error', type: 'T' } } |
