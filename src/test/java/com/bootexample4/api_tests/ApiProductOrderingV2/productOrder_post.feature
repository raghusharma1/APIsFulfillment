# ********RoostGPT********

# Test generated by RoostGPT for test sampleArtilleryEnv2 using AI Type  and AI Model 
# 
# Feature file generated for /productOrder_post for http method type POST 
# RoostTestHash=98c6afd708
# 
# 

# ********RoostGPT********
Feature: Test /productOrder API for various scenarios

  Background:
    * def urlBase = karate.properties['nnnn_URL_BASE'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * configure headers = { Authorization: #(karate.properties['nnnn_AUTH_TOKEN']) }

  Scenario Outline: Test POST /productOrder with valid inputs
    Given path '/productOrder'
    And request
      """
      <requestBody>
      """
    When method post
    Then status 201
    And match response ==
      """
      <expectedResponse>
      """

    Examples:
      | read('productOrder_post.csv') |

  Scenario: Test POST /productOrder with invalid inputs
    Given path '/productOrder'
    And request
      """
      { "orderType": "FTTP", "items": [{ "id": "INVALID", "quantity": 0 }] }
      """
    When method post
    Then status 400
    And match response contains
      """
      { "message": "Bad Request" }
      """

  Scenario: Test GET /productOrder unauthorized access
    Given path '/productOrder'
    And headers
      """
      { Authorization: 'InvalidToken' }
      """
    When method get
    Then status 401
    And match response contains
      """
      { "message": "Unauthorized" }
      """

  Scenario: Test DELETE /productOrder with valid orderId
    Given path '/productOrder', '123'
    When method delete
    Then status 200
    And match response contains
      """
      { "message": "Order deleted successfully" }
      """

  Scenario: Test DELETE /productOrder with invalid orderId
    Given path '/productOrder', '999'
    When method delete
    Then status 404
    And match response contains
      """
      { "message": "Order not found" }
      """
