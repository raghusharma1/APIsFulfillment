# ********RoostGPT********

# Test generated by RoostGPT for test sampleArtilleryEnv2 using AI Type  and AI Model 
# 
# Feature file generated for /productOrder_post for http method type POST 
# RoostTestHash=98c6afd708
# 
# 

# ********RoostGPT********
Feature: Test the /productOrder API endpoint

  Background:
    * def urlBase = karate.properties['nnnn_URL_BASE'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * configure headers = { Authorization: #(karate.properties['nnnn_AUTH_TOKEN']) }

  Scenario Outline: Test POST /productOrder with valid payload
    Given path '/productOrder'
    And request <payload>
    When method post
    Then status 201
    And match response == <expectedResponse>
    And match response.order.id == '#notnull'
    And match response.control.code == '201'
    And match response.control.message == 'Created'
    And match response.control.type == 'S'

    Examples:
      | read('productOrder_post.csv') |

  Scenario Outline: Test POST /productOrder with invalid payload leading to various errors
    Given path '/productOrder'
    And request <payload>
    When method post
    Then status <status_code>
    And match response == <expectedResponse>
    And match response.control.code == <error_code>
    And match response.control.message == <error_message>
    And match response.control.type == 'E'

    Examples:
      | payload                                          | status_code | expectedResponse                                               | error_code | error_message                                                 |
      | read('examples/InvalidCatalogID.json')           |         400 | read('responses/400CatalogIDOutOfStandard.json')               | '400'      | 'Campo Catalog ID fora do padrão esperado'                    |
      | read('examples/InvalidCatalogIDSpeed.json')      |         400 | read('responses/400CatalogIDWithGreaterSpeedThanAllowed.json') | '400'      | 'O campo Catalog ID está com velocidade superior a permitida' |
      | read('examples/GeneralBadRequest.json')          |         400 | read('responses/400GeneralBadRequest.json')                    | '400'      | 'Bad Request'                                                 |
      | read('examples/Unauthorized.json')               |         401 | read('responses/401Unauthorized.json')                         | '401'      | 'Unauthorized'                                                |
      | read('examples/ForbiddenScopeNotPermitted.json') |         403 | read('responses/403ForbiddenScopeNotPermitted.json')           | '403'      | 'Forbidden - Scope Not Permitted'                             |
      | read('examples/NotFound.json')                   |         404 | read('responses/404NotFound.json')                             | '404'      | 'Not Found'                                                   |
      | read('examples/TooManyRequests.json')            |         429 | read('responses/429TooManyRequests.json')                      | '429'      | 'Too Many Requests - Exceeded Quota'                          |
      | read('examples/InternalError.json')              |         500 | read('responses/500InternalServerError.json')                  | '500'      | 'Internal Server Error'                                       |
      | read('examples/ServiceUnavailable.json')         |         503 | read('responses/503ServiceUnavailable.json')                   | '503'      | 'Service Unavailable'                                         |
      | read('examples/GatewayTimeout.json')             |         504 | read('responses/504GatewayTimeout.json')                       | '504'      | 'Gateway Timeout'                                             |
