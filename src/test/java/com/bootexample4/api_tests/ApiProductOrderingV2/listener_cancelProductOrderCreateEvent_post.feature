# ********RoostGPT********

# Test generated by RoostGPT for test sampleArtilleryEnv2 using AI Type  and AI Model 
# 
# Feature file generated for /listener/cancelProductOrderCreateEvent_post for http method type POST 
# RoostTestHash=7601d79448
# 
# 

# ********RoostGPT********
Feature: Cancel Product Order Create Event By Client

  Background:
    * def urlBase = karate.properties['nnnn_URL_BASE'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * configure headers = { Authorization: #(karate.properties['nnnn_AUTH_TOKEN']) }

  Scenario Outline: Verify successful cancellation of product order creation event
    Given path '/listener/cancelProductOrderCreateEvent'
    And request
      """
      <requestBody>
      """
    When method post
    Then status 204
    And match response == '#null'

    Examples:
      | read('listener_cancelProductOrderCreateEvent_post.csv') |

  Scenario Outline: Verify unauthorized access with invalid or missing token
    Given path '/listener/cancelProductOrderCreateEvent'
    And request
      """
      <requestBody>
      """
    And configure headers = { Authorization: 'invalid_token' }
    When method post
    Then status 401

    Examples:
      | requestBody|
      | { "notification": { "order": { "associatedDocument": "VTT001", "id": "20230315000001" }, "customer": { "subscriberId": "1234567890" }, "date": "2023-03-15T12:34:56Z", "issue": { "action": "abrir", "code": { "code": 7001 }, "description": "Pendência Cancelamento por Duplicidade" }, "lostEquipment": "False", "resource": { "resource": { "devices": [{ "device": { "category": "A1", "description": "Router", "resourceCharacteristic": [{ "name": "Model", "value": "ModelX" }], "startOperatingDate": "2023-03-15T12:00:00Z", "state": "active", "type": "Router", "usageState": "inUse" } }] } }, "type": "Notification" } } |

  Scenario Outline: Verify handling of bad request due to invalid request body
    Given path '/listener/cancelProductOrderCreateEvent'
    And request
      """
      <requestBody>
      """
    When method post
    Then status 400

    Examples:
      | requestBody                                                                                  |
      | { "notification": { "order": { "associatedDocument": "INVALID_DOC", "id": "INVALID_ID" } } } |

  Scenario Outline: Verify server error scenarios
    Given path '/listener/cancelProductOrderCreateEvent'
    And request
      """
      <requestBody>
      """
    When method post
    Then status 500

    Examples:
      | requestBody|
      | { "notification": { "order": { "associatedDocument": "VTT001", "id": "20230315000001" }, "customer": { "subscriberId": "1234567890" }, "date": "2023-03-15T12:34:56Z", "issue": { "action": "abrir", "code": { "code": 7001 }, "description": "Pendência Cancelamento por Duplicidade" }, "lostEquipment": "False", "resource": { "resource": { "devices": [{ "device": { "category": "A1", "description": "Router", "resourceCharacteristic": [{ "name": "Model", "value": "ModelX" }], "startOperatingDate": "2023-03-15T12:00:00Z", "state": "active", "type": "Router", "usageState": "inUse" } }] } }, "type": "Notification" } } |
