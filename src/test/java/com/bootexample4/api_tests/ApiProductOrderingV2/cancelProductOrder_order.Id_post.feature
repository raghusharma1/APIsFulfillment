# ********RoostGPT********

# Test generated by RoostGPT for test sampleArtilleryEnv2 using AI Type  and AI Model 
# 
# Feature file generated for /cancelProductOrder/{order.Id}_post for http method type POST 
# RoostTestHash=a5ea3b10ac
# 
# 

# ********RoostGPT********
Feature: Cancel Product Order By Id

  Background:
    * def urlBase = karate.properties['nnnn_URL_BASE'] || karate.get('urlBase', 'http://localhost:4010')
    * configure headers = { Authorization: #(karate.properties['nnnn_AUTH_TOKEN']) }

  Scenario Outline: Cancel order with valid order id and request
    Given url urlBase
    And path '/cancelProductOrder/', <order_Id>
    And request <requestBody>
    When method DELETE
    Then status 200
    And match response contains { code: '#string', message: '#string', type: '#string' }

    Examples:
      | read('cancelProductOrder_order.Id_post.csv') |

  Scenario Outline: Cancel order with invalid order id
    Given url urlBase
    And path '/cancelProductOrder/', <order_Id>
    And request {}
    When method DELETE
    Then status 404
    And match response == { control: { code: '404', message: 'Not Found', type: 'E' } }

    Examples:
      | order_Id  |
      | 'INVALID' |

  Scenario: Unauthorized access to cancel order
    Given url urlBase
    And path '/cancelProductOrder/20230315000001'
    And request """{ "order": { "associatedDocument": "VTT001", "customer": { "subscriberId": "SVTAL001" } }}"""
    When method DELETE
    Then status 401
    And match response == { control: { code: '401', message: 'Unauthorized', type: 'E' } }

  Scenario: Too many requests - rate limiting
    Given url urlBase
    And path '/cancelProductOrder/20230315000001'
    And request """{ "order": { "associatedDocument": "VTT001", "customer": { "subscriberId": "SVTAL001" } }}"""
    When method DELETE
    Then status 429
    And match response == { control: { code: '429', message: 'Too Many Requests - Exceeded Quota', type: 'E' } }
