# ********RoostGPT********

# Test generated by RoostGPT for test sampleArtilleryEnv2 using AI Type  and AI Model 
# 
# Feature file generated for /cancelProductOrder/{order.Id}_post for http method type POST 
# RoostTestHash=a5ea3b10ac
# 
# 

# ********RoostGPT********
Feature: Cancel Product Order By Id

  Background:
    * def urlBase = karate.properties['nnnn_URL_BASE'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * configure headers = { Authorization: #(karate.properties['nnnn_AUTH_TOKEN']) }

  Scenario Outline: Cancel product order with valid order ID and request body
    Given path 'cancelProductOrder', '<order_Id>'
    And request
      """
      { 
        order: { 
          associatedDocument: '<associatedDocument>', 
          customer: { subscriberId: '<subscriberId>' } 
        } 
      }
      """
    When method DELETE
    Then status 200
    And match response ==
      """
      { 
        control: { code: '200', message: 'OK', type: 'S' } 
      }
      """

    Examples:
      | read('cancelProductOrder_order.Id_post.csv') |

  Scenario Outline: Cancel product order with invalid or expired credentials
    Given path 'cancelProductOrder', '<order_Id>'
    And request
      """
      { 
        order: { 
          associatedDocument: '<associatedDocument>', 
          customer: { subscriberId: '<subscriberId>' } 
        } 
      }
      """
    When method DELETE
    Then status 403
    And match response ==
      """
      { 
        control: { code: '403', message: 'Forbidden - Scope Not Permitted', type: 'E' } 
      }
      """

    Examples:
      | order_Id         | associatedDocument | subscriberId |
      | '20230315000001' | 'VTT001'           | 'SVTAL001'   |

  Scenario Outline: Cancel product order with not found order ID
    Given path 'cancelProductOrder', '<order_Id>'
    And request
      """
      { 
        order: { 
          associatedDocument: '<associatedDocument>', 
          customer: { subscriberId: '<subscriberId>' } 
        } 
      }
      """
    When method DELETE
    Then status 404
    And match response ==
      """
      { 
        control: { code: '404', message: 'Not Found', type: 'E' } 
      }
      """

    Examples:
      | order_Id         | associatedDocument | subscriberId |
      | '99999999999999' | 'VTT009'           | 'SVTAL009'   |

  Scenario Outline: Cancel product order with too many requests
    Given path 'cancelProductOrder', '<order_Id>'
    And request
      """
      { 
        order: { 
          associatedDocument: '<associatedDocument>', 
          customer: { subscriberId: '<subscriberId>' } 
        } 
      }
      """
    When method DELETE
    Then status 429
    And match response ==
      """
      { 
        control: { code: '429', message: 'Too Many Requests - Exceeded Quota', type: 'E' } 
      }
      """

    Examples:
      | order_Id         | associatedDocument | subscriberId |
      | '20230315000003' | 'VTT002'           | 'SVTAL002'   |

  Scenario Outline: Cancel product order with internal server error
    Given path 'cancelProductOrder', '<order_Id>'
    And request
      """
      { 
        order: { 
          associatedDocument: '<associatedDocument>', 
          customer: { subscriberId: '<subscriberId>' } 
        } 
      }
      """
    When method DELETE
    Then status 500
    And match response ==
      """
      { 
        control: { code: '500', message: 'Internal Server Error', type: 'T' } 
      }
      """

    Examples:
      | order_Id         | associatedDocument | subscriberId |
      | '20230315000004' | 'VTT003'           | 'SVTAL003'   |
