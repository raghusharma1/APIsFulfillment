# ********RoostGPT********

# Test generated by RoostGPT for test sampleArtilleryEnv2 using AI Type  and AI Model 
# 
# Feature file generated for /cancelProductOrder/{order.Id}_post for http method type POST 
# RoostTestHash=a5ea3b10ac
# 
# 

# ********RoostGPT********
Feature: Cancel Product Order By Id

  Background:
    * def urlBase = karate.properties['nnnn_URL_BASE'] || karate.get('urlBase', 'http://localhost:4010')
    * configure headers = { Authorization: #(karate.properties['nnnn_AUTH_TOKEN']) }
    * url urlBase

  Scenario Outline: Cancel order with valid order ID and request body
    Given path '/cancelProductOrder/', <order_Id>
    And request
      """
      {
        "order": {
          "associatedDocument": "<associatedDocument>", 
          "customer": {"subscriberId": "<subscriberId>"}
        }
      }
      """
    When method POST
    Then status 200
    And match response ==
      """
      { 
        "control": { 
          "code": "200", 
          "message": "OK", 
          "type": "S" 
        } 
      }
      """
    And match response.control.code == '#string'
    And match response.control.message == '#string'
    And match response.control.type == '#string'

    Examples:
      | read('cancelProductOrder_order.Id_post.csv') |

  Scenario Outline: Cancel order with invalid or missing order ID
    Given path '/cancelProductOrder/', <order_Id>
    And request
      """
      {
        "order": {
          "associatedDocument": "<associatedDocument>", 
          "customer": {"subscriberId": "<subscriberId>"}
        }
      }
      """
    When method POST
    Then status 404
    And match response ==
      """
      { 
        "control": { 
          "code": "404", 
          "message": "Not Found", 
          "type": "E" 
        } 
      }
      """
    And match response.control.code == '#string'
    And match response.control.message == '#string'
    And match response.control.type == '#string'

    Examples:
      | order_Id | associatedDocument | subscriberId |
      | ''       | 'VTT001'           | 'SVTAL001'   |
      | null     | 'VTT001'           | 'SVTAL001'   |

  Scenario: Unauthorized access attempt
    Given path '/cancelProductOrder/20230315000001'
    And request
      """
      {
        "order": {
          "associatedDocument": "VTT001", 
          "customer": {"subscriberId": "SVTAL001"}
        }
      }
      """
    When method POST
    Then status 401
    And match response ==
      """
      { 
        "control": { 
          "code": "401", 
          "message": "Unauthorized", 
          "type": "E" 
        } 
      }
      """
    And match response.control.code == '#string'
    And match response.control.message == '#string'
    And match response.control.type == '#string'

  Scenario: Too Many Requests - Exceeded Quota
    Given path '/cancelProductOrder/20230315000001'
    And request
      """
      {
        "order": {
          "associatedDocument": "VTT001", 
          "customer": {"subscriberId": "SVTAL001"}
        }
      }
      """
    When method POST
    Then status 429
    And match response ==
      """
      { 
        "control": { 
          "code": "429", 
          "message": "Too Many Requests - Exceeded Quota", 
          "type": "E" 
        } 
      }
      """
    And match response.control.code == '#string'
    And match response.control.message == '#string'
    And match response.control.type == '#string'
