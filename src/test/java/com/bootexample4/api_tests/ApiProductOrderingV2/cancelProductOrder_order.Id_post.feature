# ********RoostGPT********

# Test generated by RoostGPT for test sampleArtilleryEnv2 using AI Type  and AI Model 
# 
# Feature file generated for /cancelProductOrder/{order.Id}_post for http method type POST 
# RoostTestHash=a5ea3b10ac
# 
# 

# ********RoostGPT********
Feature: Cancel Product Order By Id

  Background:
    * def urlBase = karate.properties['nnnn_URL_BASE'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * configure headers = { Authorization: #(karate.properties['nnnn_AUTH_TOKEN']) }

  Scenario Outline: Cancel product order with valid order ID and request body
    Given path 'cancelProductOrder', <order_Id>
    And request
      """
      { 
        "order": { 
          "associatedDocument": "<associatedDocument>", 
          "customer": { "subscriberId": "<subscriberId>" } 
        } 
      }
      """
    When method POST
    Then status <expected_status>
    And match response ==
      """
      { 
        "control": { 
          "code": <expected_code>, 
          "message": "<expected_message>", 
          "type": "<expected_type>" 
        } 
      }
      """

    Examples:
      | order_Id         | associatedDocument | subscriberId | expected_status | expected_code | expected_message                     | expected_type |
      | '20230315000001' | 'VTT001'           | 'SVTAL001'   |             200 | '200'         | 'OK'                                 | 'S'           |
      | '20230315000001' | 'VTT002'           | 'SVTAL002'   |             400 | '400'         | 'Bad Request'                        | 'E'           |
      | '20230315000001' | 'VTT003'           | 'SVTAL003'   |             401 | '401'         | 'Unauthorized'                       | 'E'           |
      | '20230315000001' | 'VTT004'           | 'SVTAL004'   |             403 | '403'         | 'Forbidden - Scope Not Permitted'    | 'E'           |
      | '20230315000001' | 'VTT005'           | 'SVTAL005'   |             404 | '404'         | 'Not Found'                          | 'E'           |
      | '20230315000001' | 'VTT006'           | 'SVTAL006'   |             406 | '406'         | 'Not Acceptable'                     | 'E'           |
      | '20230315000001' | 'VTT007'           | 'SVTAL007'   |             423 | '423'         | 'Locked'                             | 'E'           |
      | '20230315000001' | 'VTT008'           | 'SVTAL008'   |             429 | '429'         | 'Too Many Requests - Exceeded Quota' | 'E'           |
      | '20230315000001' | 'VTT009'           | 'SVTAL009'   |             500 | '500'         | 'Internal Server Error'              | 'T'           |
      | '20230315000001' | 'VTT010'           | 'SVTAL010'   |             503 | '503'         | 'Service Unavailable'                | 'T'           |
      | '20230315000001' | 'VTT011'           | 'SVTAL011'   |             504 | '504'         | 'Gateway Timeout'                    | 'T'           |
