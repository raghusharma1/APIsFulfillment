# ********RoostGPT********

# Test generated by RoostGPT for test sampleArtilleryEnv2 using AI Type Open AI and AI Model gpt-4-turbo
# 
# Feature file generated for /cancelProductOrder/{order.Id}_post for http method type POST 
# RoostTestHash=a5ea3b10ac
# 
# 

# ********RoostGPT********
Feature: Cancel Product Order By Id

  Background:
    * def urlBase = karate.properties['nnnn_URL_BASE'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * configure headers = { Authorization: #(karate.properties['nnnn_AUTH_TOKEN']) }

  Scenario Outline: Cancel product order with valid order ID and payload
    Given path '<order_Id>'
    And request
      """
      <payload>
      """
    When method DELETE
    Then status 200
    And match response ==
      """
      <expected_response>
      """
    And match response.control.code == '200'
    And match response.control.message == 'OK'
    And match response.control.type == 'S'

    Examples:
      | read('cancelProductOrder_order.Id_post.csv') |

  Scenario Outline: Cancel product order with invalid or expired credentials
    Given path '<order_Id>'
    And request
      """
      <payload>
      """
    When method DELETE
    Then status 403
    And match response ==
      """
      <expected_response>
      """
    And match response.control.code == '403'
    And match response.control.message contains 'Forbidden'
    And match response.control.type == 'E'

    Examples:
      | order_Id         | payload                                                                                     | expected_response                                                                           |
      | '20230315000001' | { "order": { "associatedDocument": "VTT002", "customer": { "subscriberId": "SVTAL002" } } } | { "control": { "code": "403", "message": "Forbidden - Scope Not Permitted", "type": "E" } } |

  Scenario Outline: Cancel product order with non-existent order ID
    Given path '<order_Id>'
    And request
      """
      <payload>
      """
    When method DELETE
    Then status 404
    And match response ==
      """
      <expected_response>
      """
    And match response.control.code == '404'
    And match response.control.message == 'Not Found'
    And match response.control.type == 'E'

    Examples:
      | order_Id         | payload                                                                                     | expected_response                                                     |
      | '99999999999999' | { "order": { "associatedDocument": "VTT999", "customer": { "subscriberId": "SVTAL999" } } } | { "control": { "code": "404", "message": "Not Found", "type": "E" } } |

  Scenario Outline: Cancel product order with invalid payload
    Given path '<order_Id>'
    And request
      """
      <payload>
      """
    When method DELETE
    Then status 400
    And match response ==
      """
      <expected_response>
      """
    And match response.control.code == '400'
    And match response.control.message == 'Bad Request'
    And match response.control.type == 'E'

    Examples:
      | order_Id         | payload                                                                                             | expected_response                                                       |
      | '20230315000001' | { "order": { "associatedDocument": "INVALID_DOC", "customer": { "subscriberId": "INVALID_SUB" } } } | { "control": { "code": "400", "message": "Bad Request", "type": "E" } } |
