# ********RoostGPT********

# Test generated by RoostGPT for test sampleArtilleryEnv2 using AI Type  and AI Model 
# 
# Feature file generated for /productOrder/{order.Id}_patch for http method type PATCH 
# RoostTestHash=9e8fcf3d77
# 
# 

# ********RoostGPT********
Feature: Patch Product Order By Id

  Background:
    * def urlBase = karate.properties['nnnn_URL_BASE'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * configure headers = { Authorization: #(karate.properties['nnnn_AUTH_TOKEN']) }

  Scenario Outline: Update product order with valid data
    Given path '/productOrder/', <order_Id>
    And request
      """
      <request_body>
      """
    When method patch
    Then status 200
    And match response ==
      """
      <expected_response>
      """
    And match response.code == '200'
    And match response.message == 'OK'
    And match response.type == 'S'
    And match response.path == '/productOrder/'

    Examples:
      | read('productOrder_order.Id_patch.csv') |

  Scenario Outline: Update product order with invalid data
    Given path '/productOrder/', <order_Id>
    And request
      """
      <request_body>
      """
    When method patch
    Then status <response_status>
    And match response ==
      """
      <expected_response>
      """
    And match response.code == <response_code>
    And match response.message == <response_message>
    And match response.type == <response_type>

    Examples:
      | order_Id         | request_body                                                                                                                                                                                                                                                                                                                      | response_status | expected_response                                                                                  | response_code | response_message | response_type |
      | '20230315000001' | { "order": { "appointment": { "date": "invalid-date", "hasSlot": true, "mandatoryType": "Permitido", "workOrderId": "" }, "associatedDocument": "VTT001", "correlationOrder": "10", "issue": { "action": "fechar", "code": "7016", "observation": "Reagendamento por ausência", "updateDate": "2021-12-09T15:20:00" }} }          |             400 | { "control": { "code": "400", "message": "Bad Request", "type": "E" } }                            | '400'         | 'Bad Request'    | 'E'           |
      | '20230315000001' | { "order": { "appointment": { "date": "2021-06-07T12:47:00", "hasSlot": true, "mandatoryType": "InvalidType", "workOrderId": "" }, "associatedDocument": "VTT001", "correlationOrder": "10", "issue": { "action": "fechar", "code": "7016", "observation": "Reagendamento por ausência", "updateDate": "2021-12-09T15:20:00" }} } |             406 | { "control": { "code": "406", "message": "Not Acceptable (MandatoryType invalid)", "type": "E" } } | '406'         | 'Not Acceptable' | 'E'           |
