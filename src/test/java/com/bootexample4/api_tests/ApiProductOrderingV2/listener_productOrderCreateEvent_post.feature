# ********RoostGPT********

# Test generated by RoostGPT for test sampleArtilleryEnv2 using AI Type  and AI Model 
# 
# Feature file generated for /listener/productOrderCreateEvent_post for http method type POST 
# RoostTestHash=5d5b9532f3
# 
# 

# ********RoostGPT********
Feature: Testing Product Order Create Event API

  Background:
    * def urlBase = karate.properties['nnnn_URL_BASE'] || karate.get('urlBase', 'http://localhost:4010')
    * configure headers = { Authorization: #(karate.properties['nnnn_AUTH_TOKEN']) }

  Scenario Outline: Verify Product Order Create Event API with valid data
    Given url urlBase
    And path '/listener/productOrderCreateEvent'
    And request
      """
      <requestBody>
      """
    When method post
    Then status 204
    And match responseHeaders['Content-Type'][0] == 'application/json'

    Examples:
      | read('listener_productOrderCreateEvent_post.csv') |

  Scenario: Verify Product Order Create Event API returns 400 for bad request
    Given url urlBase
    And path '/listener/productOrderCreateEvent'
    And request
      """
      { "invalidField": "data" }
      """
    When method post
    Then status 400

  Scenario: Verify Product Order Create Event API returns 401 for unauthorized access
    Given url urlBase
    And path '/listener/productOrderCreateEvent'
    And request
      """
      { "notification": { "date": "2021-06-05T20:23:29-03:00", "order": { "associatedDocument": "VTT001", "correlationOrder": "10", "id": "20230315000001" } } }
      """
    And header Authorization = 'InvalidToken'
    When method post
    Then status 401

  Scenario: Verify Product Order Create Event API returns 500 for server error
    Given url urlBase
    And path '/listener/productOrderCreateEvent'
    And request
      """
      { "notification": { "date": "2021-06-05T20:23:29-03:00", "order": { "associatedDocument": "VTT001", "correlationOrder": "10", "id": "20230315000001" } } }
      """
    And header X-Mock-Response-Code = 500
    When method post
    Then status 500

  Scenario: Verify Product Order Create Event API returns 503 for service unavailable
    Given url urlBase
    And path '/listener/productOrderCreateEvent'
    And request
      """
      { "notification": { "date": "2021-06-05T20:23:29-03:00", "order": { "associatedDocument": "VTT001", "correlationOrder": "10", "id": "20230315000001" } } }
      """
    And header X-Mock-Response-Code = 503
    When method post
    Then status 503

  Scenario: Verify Product Order Create Event API returns 504 for timeout
    Given url urlBase
    And path '/listener/productOrderCreateEvent'
    And request
      """
      { "notification": { "date": "2021-06-05T20:23:29-03:00", "order": { "associatedDocument": "VTT001", "correlationOrder": "10", "id": "20230315000001" } } }
      """
    And header X-Mock-Response-Code = 504
    When method post
    Then status 504
