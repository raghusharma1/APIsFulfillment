# ********RoostGPT********

# Test generated by RoostGPT for test sampleArtilleryEnv2 using AI Type  and AI Model 
# 
# Feature file generated for /listener/productOrderCreateEvent_post for http method type POST 
# RoostTestHash=5d5b9532f3
# 
# 

# ********RoostGPT********
Feature: Testing Product Order Create Event API Endpoint

  Background:
    * def urlBase = karate.properties['nnnn_URL_BASE'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * configure headers = { Authorization: #(karate.properties['nnnn_AUTH_TOKEN']) }

  Scenario: Verify successful product order creation with valid data
    Given path '/listener/productOrderCreateEvent'
    And request
      """
      {
        "notification": {
          "date": "2021-06-05T20:23:29-03:00",
          "order": {
            "associatedDocument": "VTT001",
            "correlationOrder": "10",
            "id": "20230315000001"
          }
        }
      }
      """
    When method post
    Then status 204

  Scenario Outline: Verify product order creation with various invalid inputs
    Given path '/listener/productOrderCreateEvent'
    And request <body>
    When method post
    Then status <expectedStatus>

    Examples:
      | body                                                                                                                                                      | expectedStatus |
      | {"notification": {"date": "invalid-date", "order": {"associatedDocument": "VTT001", "correlationOrder": "10", "id": "20230315000001"}}}                   |            400 |
      | {"notification": {"date": "2021-06-05T20:23:29-03:00", "order": {"associatedDocument": "VTT001", "correlationOrder": "invalid", "id": "20230315000001"}}} |            400 |
      | {}                                                                                                                                                        |            400 |

  Scenario: Unauthorized access to product order create event
    Given path '/listener/productOrderCreateEvent'
    And request
      """
      {
        "notification": {
          "date": "2021-06-05T20:23:29-03:00",
          "order": {
            "associatedDocument": "VTT001",
            "correlationOrder": "10",
            "id": "20230315000001"
          }
        }
      }
      """
    And configure headers = { Authorization: 'InvalidToken' }
    When method post
    Then status 401

  Scenario: Verify server error handling
    Given path '/listener/productOrderCreateEvent'
    And request
      """
      {
        "notification": {
          "date": "2021-06-05T20:23:29-03:00",
          "order": {
            "associatedDocument": "VTT001",
            "correlationOrder": "10",
            "id": "20230315000001"
          }
        }
      }
      """
    And header X-Mock-Response-Code = 500
    When method post
    Then status 500
