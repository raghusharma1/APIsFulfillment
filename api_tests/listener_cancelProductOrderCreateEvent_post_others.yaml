# ********RoostGPT********

# Test generated by RoostGPT for test sampleArtilleryEnv2 using AI Type  and AI Model 
# 
# Test generated for /listener/cancelProductOrderCreateEvent_post for http method type POST in artillery framework
# RoostTestHash=7601d79448
# 
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.nnnn_API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1
  payload:
    path: "listener_cancelProductOrderCreateEvent_post_others.csv"
    skipHeader: true
    fields:
      - "subscriberId"
      - "date"
      - "associatedDocument"
      - "code"
      - "correlationOrder"
      - "description"
      - "id"
      - "action"
      - "issueCode"
      - "issueDescription"
      - "lostEquipment"
      - "fieldActivity"
      - "observation"
      - "reason"
      - "task"
      - "type"
      - "updateDate"
    delimiter: "^|^"
  environments:
    development:
      target: "http://dev.example.com"
    staging:
      target: "http://staging.example.com"
    production:
      target: "https://api.example.com"
  plugins:
    expect: {}

scenarios:
  - name: "Invalid API Usage Scenarios"
    flow:
      - log: "Attempting to create an event with invalid authentication"
      - post:
          url: "/listener/cancelProductOrderCreateEvent"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{ $processEnvironment.nnnn_AUTH_TOKEN }}"
          json:
            notification:
              order:
                associatedDocument: "{{ associatedDocument }}"
                id: "{{ id }}"
          expect:
            - statusCode: 401

      - think: 1

      - log: "Sending a request with invalid payload format"
      - post:
          url: "/listener/cancelProductOrderCreateEvent"
          headers:
            Content-Type: "application/json"
          json:
            notification:
              order:
                associatedDocument: "INVALID_PAYLOAD"
          expect:
            - statusCode: 400

      - think: 1

      - log: "Using a non-existent endpoint"
      - post:
          url: "/listener/cancelProductOrderCreateEvent/nonexistent"
          headers:
            Content-Type: "application/json"
          json:
            notification:
              order:
                associatedDocument: "{{ associatedDocument }}"
                id: "{{ id }}"
          expect:
            - statusCode: 404

      - think: 1

      - log: "Exceeding payload maximum length constraints"
      - post:
          url: "/listener/cancelProductOrderCreateEvent"
          headers:
            Content-Type: "application/json"
          json:
            notification:
              order:
                associatedDocument: "{{ associatedDocument }}"
                id: "202303150000012023031500000120230315000001202303150000012023031500000120230315000001"
          expect:
            - statusCode: 422

      - think: 1

      - log: "Providing an enum value that does not exist in the schema"
      - post:
          url: "/listener/cancelProductOrderCreateEvent"
          headers:
            Content-Type: "application/json"
          json:
            notification:
              order:
                associatedDocument: "{{ associatedDocument }}"
                code: "9999"  # Invalid enum value
          expect:
            - statusCode: 400
