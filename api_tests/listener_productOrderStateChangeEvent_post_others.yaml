# ********RoostGPT********

# Test generated by RoostGPT for test sampleArtilleryEnv2 using AI Type  and AI Model 
# 
# Test generated for /listener/productOrderStateChangeEvent_post for http method type POST in artillery framework
# RoostTestHash=a9bfb68d42
# 
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.nnnn_API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1
  payload:
    path: "listener_productOrderStateChangeEvent_post_others.csv"
    fields:
      - "subscriberId"
      - "date"
      - "associatedDocument"
      - "code"
      - "correlationOrder"
      - "description"
      - "id"
      - "type"
    skipHeader: true
    delimiter: "^|^"
  variables:
    AUTH_TOKEN: "{{ $processEnvironment.nnnn_AUTH_TOKEN }}"
  plugins:
    expect: {}

scenarios:
  - name: "Test various non-success scenarios for State Change Event By Client"
    flow:
      - log: "Attempting to send notification with invalid subscriberId"
      - post:
          url: "/listener/productOrderStateChangeEvent"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{ AUTH_TOKEN }}"
          json:
            notification:
              customer:
                subscriberId: "invalidID"
              date: "{{ date }}"
              order:
                associatedDocument: "{{ associatedDocument }}"
                code: "{{ code }}"
                correlationOrder: "{{ correlationOrder }}"
                description: "{{ description }}"
                id: "{{ id }}"
                type: "{{ type }}"
          expect:
            - statusCode: 400
      - think: 1

      - log: "Sending notification with past date"
      - post:
          url: "/listener/productOrderStateChangeEvent"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{ AUTH_TOKEN }}"
          json:
            notification:
              customer:
                subscriberId: "{{ subscriberId }}"
              date: "2010-01-01T00:00:00Z"
              order:
                associatedDocument: "{{ associatedDocument }}"
                code: "{{ code }}"
                correlationOrder: "{{ correlationOrder }}"
                description: "{{ description }}"
                id: "{{ id }}"
                type: "{{ type }}"
          expect:
            - statusCode: 400
      - think: 1

      - log: "Sending notification with invalid order code"
      - post:
          url: "/listener/productOrderStateChangeEvent"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{ AUTH_TOKEN }}"
          json:
            notification:
              customer:
                subscriberId: "{{ subscriberId }}"
              date: "{{ date }}"
              order:
                associatedDocument: "{{ associatedDocument }}"
                code: "999"  # Invalid code not in the enum
                correlationOrder: "{{ correlationOrder }}"
                description: "{{ description }}"
                id: "{{ id }}"
                type: "{{ type }}"
          expect:
            - statusCode: 422
      - think: 1

      - log: "Testing with missing required fields"
      - post:
          url: "/listener/productOrderStateChangeEvent"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{ AUTH_TOKEN }}"
          json:
            notification:
              customer:
                subscriberId: "{{ subscriberId }}"
              date: "{{ date }}"
              order:
                associatedDocument: "{{ associatedDocument }}"
                description: "{{ description }}"
                id: "{{ id }}"
                type: "{{ type }}"
          expect:
            - statusCode: 400
      - think: 1

      - log: "Using an incorrect URL"
      - post:
          url: "/listener/invalidEndpoint"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{ AUTH_TOKEN }}"
          json:
            notification:
              customer:
                subscriberId: "{{ subscriberId }}"
              date: "{{ date }}"
              order:
                associatedDocument: "{{ associatedDocument }}"
                code: "{{ code }}"
                correlationOrder: "{{ correlationOrder }}"
                description: "{{ description }}"
                id: "{{ id }}"
                type: "{{ type }}"
          expect:
            - statusCode: 404
      - think: 1
