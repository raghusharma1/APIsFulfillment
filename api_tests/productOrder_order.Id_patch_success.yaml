# ********RoostGPT********

# Test generated by RoostGPT for test sampleArtilleryEnv2 using AI Type  and AI Model 
# 
# Test generated for /productOrder/{order.Id}_patch for http method type PATCH in artillery framework
# RoostTestHash=9e8fcf3d77
# 
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.nnnn_API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 5
  payload:
    path: "productOrder_order.Id_patch_success.csv"
    fields: ["order.Id", "appointment.date", "appointment.hasSlot", "appointment.mandatoryType", "appointment.workOrderId", "associatedDocument", "correlationOrder", "issue.action", "issue.code", "issue.observation", "issue.updateDate"]
    skipHeader: true
    delimiter: "^|^"
  plugins:
    expect: {}

scenarios:
  - name: "Patch Product Order By Id Success Scenario"
    flow:
      - log: "Starting PATCH request for Product Order update with valid payload"
      - think: 1
      - patch:
          url: "/productOrder/{{ order.Id }}"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{ $processEnvironment.nnnn_AUTH_TOKEN }}"
          json:
            order:
              appointment:
                date: "{{ appointment.date }}"
                hasSlot: "{{ appointment.hasSlot }}"
                mandatoryType: "{{ appointment.mandatoryType }}"
                workOrderId: "{{ appointment.workOrderId }}"
              associatedDocument: "{{ associatedDocument }}"
              correlationOrder: "{{ correlationOrder }}"
              issue:
                action: "{{ issue.action }}"
                code: "{{ issue.code }}"
                observation: "{{ issue.observation }}"
                updateDate: "{{ issue.updateDate }}"
          expect:
            - statusCode: 200
            - hasProperty: "code"
            - hasProperty: "message"
            - hasProperty: "type"
            - equals: 
                jsonpath: "$.code"
                value: "200"
            - equals: 
                jsonpath: "$.message"
                value: "OK"
            - equals: 
                jsonpath: "$.type"
                value: "S"
      - think: 1
      - log: "Completed PATCH request for Product Order update"
