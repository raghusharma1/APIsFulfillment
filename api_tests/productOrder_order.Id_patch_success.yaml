# ********RoostGPT********

# Test generated by RoostGPT for test sampleArtilleryEnv2 using AI Type  and AI Model 
# 
# Test generated for /productOrder/{order.Id}_patch for http method type PATCH in artillery framework
# RoostTestHash=9e8fcf3d77
# 
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.nnnn_API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 5
  payload:
    path: "productOrder_order.Id_patch_success.csv"
    skipHeader: true
    delimiter: "^|^"
  environments:
    staging:
      target: "https://staging-api.example.com"
    production:
      target: "https://api.example.com"
  plugins:
    expect: {}

scenarios:
  - name: "Patch Product Order By Id Scenario"
    flow:
      - log: "Starting PATCH request to update product order with valid data"
      - patch:
          url: "/productOrder/{{ order.Id }}"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{$processEnvironment.nnnn_AUTH_TOKEN}}"
          json:
            order:
              appointment:
                date: "2021-06-07T12:47:00"
                hasSlot: true
                mandatoryType: "Permitido"
                workOrderId: ""
              associatedDocument: "VTT001"
              correlationOrder: "10"
              issue:
                action: "fechar"
                code: "7016"
                observation: "Reagendamento por ausÃªncia"
                updateDate: "2021-12-09T15:20:00"
          expect:
            - statusCode: 200
            - hasProperty: "code"
            - hasProperty: "message"
            - hasProperty: "type"
            - equals:
                jsonpath: "$.code"
                value: "200"
            - equals:
                jsonpath: "$.message"
                value: "OK"
            - equals:
                jsonpath: "$.type"
                value: "S"
      - think: 3
      - log: "Starting GET request to retrieve updated product order details"
      - get:
          url: "/productOrder/{{ order.Id }}"
          headers:
            Authorization: "Bearer {{$processEnvironment.nnnn_AUTH_TOKEN}}"
          expect:
            - statusCode: 200
            - hasProperty: "order.appointment.date"
            - hasProperty: "order.associatedDocument"
            - hasProperty: "order.correlationOrder"
            - hasProperty: "order.issue.action"
            - hasProperty: "order.issue.code"
            - hasProperty: "order.issue.observation"
            - hasProperty: "order.issue.updateDate"
      - think: 2
