# ********RoostGPT********

# Test generated by RoostGPT for test sampleArtilleryEnv2 using AI Type Open AI and AI Model gpt-4-turbo
# 
# Test generated for /productOrder/{order.Id}_patch for http method type PATCH in artillery framework
# RoostTestHash=9e8fcf3d77
# 
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.nnnn_API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 5
  payload:
    path: "productOrder_order.Id_patch_success.csv"
    fields:
      - "order.Id"
      - "appointment.date"
      - "appointment.hasSlot"
      - "appointment.mandatoryType"
      - "appointment.workOrderId"
      - "associatedDocument"
      - "correlationOrder"
      - "issue.action"
      - "issue.code"
      - "issue.observation"
      - "issue.updateDate"
    skipHeader: true
    delimiter: "^|^"
  plugins:
    expect: {}

scenarios:
  - name: "Patch Product Order By Id"
    flow:
      - log: "Starting PATCH request for updating product order by ID"
      - patch:
          url: "/productOrder/{{ order.Id }}"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{$processEnvironment.nnnn_AUTH_TOKEN}}"
          json:
            order:
              appointment:
                date: "{{ appointment.date }}"
                hasSlot: "{{ appointment.hasSlot }}"
                mandatoryType: "{{ appointment.mandatoryType }}"
                workOrderId: "{{ appointment.workOrderId }}"
            associatedDocument: "{{ associatedDocument }}"
            correlationOrder: "{{ correlationOrder }}"
            issue:
              action: "{{ issue.action }}"
              code: "{{ issue.code }}"
              observation: "{{ issue.observation }}"
              updateDate: "{{ issue.updateDate }}"
          expect:
            - statusCode: 200
            - hasProperty: "code"
            - hasProperty: "message"
            - hasProperty: "type"
            - equals:
                path: "message"
                value: "OK"
            - equals:
                path: "type"
                value: "S"
      - think: 1
      - log: "Verifying response headers and body after PATCH request"
      - get:
          url: "/productOrder/{{ order.Id }}"
          headers:
            Authorization: "Bearer {{$processEnvironment.nnnn_AUTH_TOKEN}}"
          expect:
            - statusCode: 200
            - hasHeader: "Content-Type"
            - headerEquals:
                name: "Content-Type"
                value: "application/json"
            - hasProperty: "order.appointment.date"
            - hasProperty: "order.associatedDocument"
            - matchesRegexp:
                path: "order.appointment.date"
                regexp: "^202[1-9]-[0-1][0-9]-[0-3][0-9]T[0-2][0-9]:[0-5][0-9]:[0-5][0-9]$"
      - think: 1
