# ********RoostGPT********

# Test generated by RoostGPT for test sampleArtilleryEnv2 using AI Type Open AI and AI Model gpt-4-turbo
# 
# Test generated for /productOrder/{order.Id}_patch for http method type PATCH in artillery framework
# RoostTestHash=9e8fcf3d77
# 
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.nnnn_API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 5
  payload:
    path: "productOrder_order.Id_patch_success.csv"
    skipHeader: true
    fields:
      - "order.Id"
      - "appointment.date"
      - "appointment.hasSlot"
      - "appointment.mandatoryType"
      - "appointment.workOrderId"
      - "associatedDocument"
      - "correlationOrder"
      - "issue.action"
      - "issue.code"
      - "issue.observation"
      - "issue.updateDate"
    delimiter: "^|^"
  environments:
    staging:
      target: "https://staging.api.example.com"
  plugins:
    expect: {}

scenarios:
  - name: "Patch Product Order By Id"
    flow:
      - log: "Starting PATCH request to update product order by ID"
      - patch:
          url: "/productOrder/{{ order.Id }}"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{ $processEnvironment.nnnn_AUTH_TOKEN }}"
          json:
            appointment:
              date: "{{ appointment.date }}"
              hasSlot: "{{ appointment.hasSlot }}"
              mandatoryType: "{{ appointment.mandatoryType }}"
              workOrderId: "{{ appointment.workOrderId }}"
            associatedDocument: "{{ associatedDocument }}"
            correlationOrder: "{{ correlationOrder }}"
            issue:
              action: "{{ issue.action }}"
              code: "{{ issue.code }}"
              observation: "{{ issue.observation }}"
              updateDate: "{{ issue.updateDate }}"
      - expect:
          - statusCode: 200
          - hasProperty: "message"
          - hasProperty: "code"
          - contentType: "application/json"
          - matchesRegexp: "code"
          - headerEquals:
              header: "Content-Type"
              value: "application/json"
      - think: 1
      - log: "Verifying response for updated product order"
      - get:
          url: "/productOrder/{{ order.Id }}"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{ $processEnvironment.nnnn_AUTH_TOKEN }}"
      - expect:
          - statusCode: 200
          - hasProperty: "order"
          - hasProperty: "appointment"
          - contentType: "application/json"
          - jmespath: "order.appointment.date == '{{ appointment.date }}'"
      - think: 1
