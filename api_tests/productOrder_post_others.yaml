# ********RoostGPT********

# Test generated by RoostGPT for test sampleArtilleryEnv2 using AI Type  and AI Model 
# 
# Test generated for /productOrder_post for http method type POST in artillery framework
# RoostTestHash=98c6afd708
# 
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.nnnn_API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1
  payload:
    path: "productOrder_post_others.csv"
    fields:
      - "associatedDocument"
      - "associatedDocumentDate"
      - "correlationOrder"
      - "customer"
      - "equipments"
      - "infraType"
      - "type"
    skipHeader: true
    delimiter: "^|^"
  environments:
    staging:
      target: "http://staging-example.com"
    production:
      target: "http://example.com"
  plugins:
    expect: {}

scenarios:
  - name: "Test various failure scenarios for API /productOrder"
    flow:
      - log: "Sending invalid authentication token"
      - post:
          url: "/productOrder"
          headers:
            Authorization: "Bearer invalid_token"
          json:
            order: "{{ associatedDocument }}"
          expect:
            - statusCode: 401
      - think: 1

      - log: "Sending request with invalid content type"
      - post:
          url: "/productOrder"
          headers:
            Content-Type: "text/plain"
          body: "Invalid content"
          expect:
            - statusCode: 415
      - think: 1

      - log: "Sending request to an invalid URL"
      - post:
          url: "/invalidProductOrder"
          json:
            order: "{{ associatedDocument }}"
          expect:
            - statusCode: 404
      - think: 1

      - log: "Sending request with missing required fields"
      - post:
          url: "/productOrder"
          json:
            order: {}
          expect:
            - statusCode: 400
            - hasProperty: "message"
      - think: 1

      - log: "Sending request with invalid payload structure"
      - post:
          url: "/productOrder"
          json:
            order:
              associatedDocument: "{{ associatedDocument }}"
              associatedDocumentDate: "invalid-date"
              correlationOrder: "{{ correlationOrder }}"
          expect:
            - statusCode: 400
            - hasProperty: "error"
      - think: 1
