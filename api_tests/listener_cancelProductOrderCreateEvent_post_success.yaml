# ********RoostGPT********

# Test generated by RoostGPT for test sampleArtilleryEnv2 using AI Type  and AI Model 
# 
# Test generated for /listener/cancelProductOrderCreateEvent_post for http method type POST in artillery framework
# RoostTestHash=7601d79448
# 
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.nnnn_API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 10
  payload:
    path: "listener_cancelProductOrderCreateEvent_post_success.csv"
    fields:
      - "subscriberId"
      - "associatedDocument"
      - "id"
      - "code"
      - "description"
    skipHeader: true
    delimiter: "^|^"
  environments:
    staging:
      target: "https://staging.api.example.com"
    production:
      target: "https://api.example.com"
  plugins:
    expect: {}

scenarios:
  - name: "Validate successful response for Cancel Product Order Create Event"
    flow:
      - log: "Starting test for POST /listener/cancelProductOrderCreateEvent with valid payload"
      - post:
          url: "/listener/cancelProductOrderCreateEvent"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{ $processEnvironment.nnnn_AUTH_TOKEN }}"
          json:
            notification:
              order:
                associatedDocument: "{{ associatedDocument }}"
                id: "{{ id }}"
              customer:
                subscriberId: "{{ subscriberId }}"
          expect:
            - statusCode: 204
            - hasProperty: "notification"
            - hasProperty: "order"
            - hasProperty: "customer"
            - hasProperty: "subscriberId"
      - think: 1
      - log: "Starting test for GET /listener/cancelProductOrderCreateEvent to confirm state"
      - get:
          url: "/listener/cancelProductOrderCreateEvent?id={{ id }}"
          headers:
            Authorization: "Bearer {{ $processEnvironment.nnnn_AUTH_TOKEN }}"
          expect:
            - statusCode: 200
            - hasProperty: "order"
            - hasProperty: "customer"
            - matchesRegexp: "associatedDocument: {{ associatedDocument }}"
            - matchesRegexp: "subscriberId: {{ subscriberId }}"
      - think: 1
