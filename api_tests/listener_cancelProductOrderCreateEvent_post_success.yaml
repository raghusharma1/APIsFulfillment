# ********RoostGPT********

# Test generated by RoostGPT for test sampleArtilleryEnv2 using AI Type  and AI Model 
# 
# Test generated for /listener/cancelProductOrderCreateEvent_post for http method type POST in artillery framework
# RoostTestHash=7601d79448
# 
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.nnnn_API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 10
  payload:
    path: "listener_cancelProductOrderCreateEvent_post_success.csv"
    fields:
      - "subscriberId"
      - "associatedDocument"
      - "correlationOrder"
      - "action"
      - "code"
      - "description"
      - "fieldActivity"
      - "observation"
      - "reason"
      - "task"
      - "type"
      - "updateDate"
      - "lostEquipment"
    skipHeader: true
    delimiter: "^|^"
  plugins:
    expect: {}

scenarios:
  - name: "Validate successful responses for cancel product order create event API"
    flow:
      - log: "Initiating POST request to cancel product order with valid payload"
      - post:
          url: "/listener/cancelProductOrderCreateEvent"
          json:
            notification:
              order:
                associatedDocument: "{{ associatedDocument }}"
                id: "{{ correlationOrder }}"
              customer:
                subscriberId: "{{ subscriberId }}"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{ $processEnvironment.nnnn_AUTH_TOKEN }}"
          expect:
            - statusCode: 204
            - hasProperty: "message"
            - equals: { message: "Operation completed successfully" }
      - think: 1

      - log: "Initiating GET request to verify the status of the order"
      - get:
          url: "/listener/checkOrderStatus?id={{ correlationOrder }}"
          headers:
            Authorization: "Bearer {{ $processEnvironment.nnnn_AUTH_TOKEN }}"
          expect:
            - statusCode: 200
            - hasProperty: "status"
            - equals: { status: "Cancelled" }
      - think: 1

      - log: "Initiating PATCH request to update the order with a new state"
      - patch:
          url: "/listener/updateOrderState"
          json:
            id: "{{ correlationOrder }}"
            state: "Processing"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{ $processEnvironment.nnnn_AUTH_TOKEN }}"
          expect:
            - statusCode: 200
            - hasProperty: "updated"
            - equals: { updated: true }
      - think: 1

      - log: "Initiating DELETE request to remove the order"
      - delete:
          url: "/listener/removeOrder?id={{ correlationOrder }}"
          headers:
            Authorization: "Bearer {{ $processEnvironment.nnnn_AUTH_TOKEN }}"
          expect:
            - statusCode: 200
            - hasProperty: "deleted"
            - equals: { deleted: true }
      - think: 1
