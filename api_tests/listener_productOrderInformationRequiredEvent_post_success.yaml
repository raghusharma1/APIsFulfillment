# ********RoostGPT********

# Test generated by RoostGPT for test sampleArtilleryEnv2 using AI Type Open AI and AI Model gpt-4-turbo
# 
# Test generated for /listener/productOrderInformationRequiredEvent_post for http method type POST in artillery framework
# RoostTestHash=ce4c08f30f
# 
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.nnnn_API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 5
  payload:
    path: "listener_productOrderInformationRequiredEvent_post_success.csv"
    fields: ["associatedDocument", "correlationOrder", "id", "action", "code", "description", "fieldActivity", "observation", "reason", "task", "type", "updateDate"]
    skipHeader: true
    delimiter: "^|^"
  plugins:
    expect: {}

scenarios:
  - name: "Product Order Information Required Event"
    flow:
      - log: "Starting POST request for product order information required event"
      - post:
          url: "/listener/productOrderInformationRequiredEvent"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{ $processEnvironment.nnnn_AUTH_TOKEN }}"
          json:
            notification:
              order:
                associatedDocument: "{{ associatedDocument }}"
                correlationOrder: "{{ correlationOrder }}"
                id: "{{ id }}"
                issue:
                  action: "{{ action }}"
                  code: "{{ code }}"
                  description: "{{ description }}"
                  fieldActivity: "{{ fieldActivity }}"
                  observation: "{{ observation }}"
                  reason: "{{ reason }}"
                  task: "{{ task }}"
                  type: "{{ type }}"
                  updateDate: "{{ updateDate }}"
          expect:
            - statusCode: 204
            - hasProperty: "notification"
            - hasProperty: "order"
            - hasProperty: "issue"
          capture:
            json: "$.notification.order"
            as: "responseOrder"
      - think: 1
      - log: "Verifying the response for order type"
      - get:
          url: "/listener/productOrderInformationRequiredEvent?type={{ responseOrder.type }}"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{ $processEnvironment.nnnn_AUTH_TOKEN }}"
          expect:
            - statusCode: 200
            - hasProperty: "order"
            - hasProperty: "type"
            - equals: 
                json: "$.order.type"
                value: "{{ responseOrder.type }}"
      - think: 1
      - log: "Checking updated date in the response"
      - get:
          url: "/listener/productOrderInformationRequiredEvent?updateDate={{ responseOrder.updateDate }}"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{ $processEnvironment.nnnn_AUTH_TOKEN }}"
          expect:
            - statusCode: 200
            - hasProperty: "order"
            - hasProperty: "updateDate"
            - equals: 
                json: "$.order.updateDate"
                value: "{{ responseOrder.updateDate }}"
      - think: 1
