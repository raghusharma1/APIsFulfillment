# ********RoostGPT********

# Test generated by RoostGPT for test sampleArtilleryEnv2 using AI Type Open AI and AI Model gpt-4-turbo
# 
# Test generated for /listener/productOrderInformationRequiredEvent_post for http method type POST in artillery framework
# RoostTestHash=ce4c08f30f
# 
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.nnnn_API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1
  payload:
    path: "listener_productOrderInformationRequiredEvent_post_others.csv"
    fields:
      - "id"
      - "code"
      - "description"
      - "fieldActivity"
      - "observation"
      - "reason"
      - "task"
      - "type"
      - "updateDate"
    skipHeader: true
    delimiter: "^|^"
  environments:
    staging:
      target: "https://api-staging.example.com"
    production:
      target: "https://api.example.com"
  plugins:
    expect: {}

scenarios:
  - name: "Test API with various non-success scenarios"
    flow:
      - log: "Testing with incorrect API URL"
      - post:
          url: "/invalidEndpoint"
          json:
            notification:
              order:
                id: "{{ id }}"
                code: "{{ code }}"
                description: "{{ description }}"
          headers:
            Authorization: "Bearer {{ $processEnvironment.nnnn_AUTH_TOKEN }}"
          expect:
            - statusCode: 404
      - think: 1
      - log: "Testing with invalid authentication token"
      - post:
          url: "/listener/productOrderInformationRequiredEvent"
          json:
            notification:
              order:
                id: "{{ id }}"
                code: "{{ code }}"
                description: "{{ description }}"
          headers:
            Authorization: "Bearer invalid_token"
          expect:
            - statusCode: 401
      - think: 1
      - log: "Testing with missing required fields"
      - post:
          url: "/listener/productOrderInformationRequiredEvent"
          json:
            notification:
              order:
                id: "{{ id }}"
          headers:
            Authorization: "Bearer {{ $processEnvironment.nnnn_AUTH_TOKEN }}"
          expect:
            - statusCode: 400
            - hasProperty: "message"
      - think: 1
      - log: "Testing with invalid field values"
      - post:
          url: "/listener/productOrderInformationRequiredEvent"
          json:
            notification:
              order:
                id: "{{ id }}"
                code: "invalid_code"  # This should be an enum value
                description: "{{ description }}"
          headers:
            Authorization: "Bearer {{ $processEnvironment.nnnn_AUTH_TOKEN }}"
          expect:
            - statusCode: 422
      - think: 1
      - log: "Testing with exceeding max length for fields"
      - post:
          url: "/listener/productOrderInformationRequiredEvent"
          json:
            notification:
              order:
                id: "{{ id }}"
                code: "{{ code }}"
                description: "This description is intentionally made very long to exceed the maximum allowed length for testing purposes."
          headers:
            Authorization: "Bearer {{ $processEnvironment.nnnn_AUTH_TOKEN }}"
          expect:
            - statusCode: 400
            - hasProperty: "error"
      - think: 1
