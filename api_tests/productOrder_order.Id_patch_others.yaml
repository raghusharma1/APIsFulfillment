# ********RoostGPT********

# Test generated by RoostGPT for test sampleArtilleryEnv2 using AI Type  and AI Model 
# 
# Test generated for /productOrder/{order.Id}_patch for http method type PATCH in artillery framework
# RoostTestHash=9e8fcf3d77
# 
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.nnnn_API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1
  payload:
    path: "productOrder_order.Id_patch_others.csv"
    fields:
      - "order.Id"
      - "associatedDocument"
      - "correlationOrder"
      - "issue.action"
      - "issue.code"
      - "issue.observation"
      - "issue.updateDate"
    skipHeader: true
    delimiter: "^|^"
  plugins:
    expect: {}

scenarios:
  - name: "Test Scenario for Non-Success API Responses"
    flow:
      - log: "Testing invalid order ID format"
      - post:
          url: "/productOrder/invalidOrderId"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{$processEnvironment.nnnn_AUTH_TOKEN}}"
          json:
            order:
              appointment:
                date: "2021-06-07T12:47:00"
                hasSlot: true
                mandatoryType: "Permitido"
                workOrderId: ""
            associatedDocument: "VTT001"
            correlationOrder: "10"
            issue:
              action: "fechar"
              code: "7016"
              observation: "Reagendamento por ausência"
              updateDate: "2021-12-09T15:20:00"
          expect:
            - statusCode: 400
      - think: 1

      - log: "Testing unauthorized access"
      - get:
          url: "/productOrder/{{ order.Id }}"
          headers:
            Content-Type: "application/json"
          expect:
            - statusCode: 401
      - think: 1

      - log: "Testing missing required fields"
      - patch:
          url: "/productOrder/{{ order.Id }}"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{$processEnvironment.nnnn_AUTH_TOKEN}}"
          json:
            order:
              appointment:
                date: "2021-06-07T12:47:00"
                hasSlot: true
          expect:
            - statusCode: 422
      - think: 1

      - log: "Testing invalid JSON structure"
      - patch:
          url: "/productOrder/{{ order.Id }}"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{$processEnvironment.nnnn_AUTH_TOKEN}}"
          body: "{invalidJson: true}"
          expect:
            - statusCode: 400
      - think: 1

      - log: "Testing with an incorrect URL"
      - post:
          url: "/incorrectEndpoint/{{ order.Id }}"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{$processEnvironment.nnnn_AUTH_TOKEN}}"
          json:
            order:
              appointment:
                date: "2021-06-07T12:47:00"
                hasSlot: true
                mandatoryType: "Permitido"
                workOrderId: ""
            associatedDocument: "VTT001"
            correlationOrder: "10"
            issue:
              action: "fechar"
              code: "7016"
              observation: "Reagendamento por ausência"
              updateDate: "2021-12-09T15:20:00"
          expect:
            - statusCode: 404
      - think: 1
