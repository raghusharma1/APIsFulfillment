# ********RoostGPT********

# Test generated by RoostGPT for test sampleArtilleryEnv2 using AI Type Open AI and AI Model gpt-4-turbo
# 
# Test generated for /productOrder/{order.Id}_patch for http method type PATCH in artillery framework
# RoostTestHash=9e8fcf3d77
# 
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.nnnn_API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1
  payload:
    path: "productOrder_order.Id_patch_others.csv"
    delimiter: "^|^"
    skipHeader: true
    fields:
      - "order.Id"
      - "action"
      - "code"
  plugins:
    expect: {}

scenarios:
  - name: "Test Non-Success Responses for Patch Product Order By Id"
    flow:
      - log: "Attempting to update with invalid order.Id"
      - patch:
          url: "/productOrder/{{ order.Id }}"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{ $processEnvironment.nnnn_AUTH_TOKEN }}"
          json:
            action: "{{ action }}"
            code: "{{ code }}"
          expect:
            - statusCode: 404
            - hasProperty: "error"
      - think: 1

      - log: "Attempting to update with incorrect content type"
      - patch:
          url: "/productOrder/{{ order.Id }}"
          headers:
            Content-Type: "text/plain"
            Authorization: "Bearer {{ $processEnvironment.nnnn_AUTH_TOKEN }}"
          body: "Invalid content type"
          expect:
            - statusCode: 415
            - hasProperty: "error"
      - think: 1

      - log: "Attempting update without authorization"
      - patch:
          url: "/productOrder/{{ order.Id }}"
          headers:
            Content-Type: "application/json"
          json:
            action: "{{ action }}"
            code: "{{ code }}"
          expect:
            - statusCode: 401
            - hasProperty: "error"
      - think: 1

      - log: "Attempting update with invalid payload (missing mandatory fields)"
      - patch:
          url: "/productOrder/{{ order.Id }}"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{ $processEnvironment.nnnn_AUTH_TOKEN }}"
          json:
            action: "invalidAction"  # assuming this is not a valid action
          expect:
            - statusCode: 400
            - hasProperty: "error"
      - think: 1

      - log: "Attempting to use invalid URL"
      - patch:
          url: "/invalidEndpoint/{{ order.Id }}"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{ $processEnvironment.nnnn_AUTH_TOKEN }}"
          json:
            action: "{{ action }}"
            code: "{{ code }}"
          expect:
            - statusCode: 404
            - hasProperty: "error"
      - think: 1
