# ********RoostGPT********

# Test generated by RoostGPT for test sampleArtilleryEnv2 using AI Type  and AI Model 
# 
# Test generated for /productOrder/{order.Id}_patch for http method type PATCH in artillery framework
# RoostTestHash=9e8fcf3d77
# 
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.nnnn_API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1
  payload:
    path: "productOrder_order.Id_patch_others.csv"
    fields:
      - "order.Id"
      - "associatedDocument"
      - "correlationOrder"
      - "issue.code"
      - "issue.observation"
      - "issue.updateDate"
      - "updateDate"
    skipHeader: true
    delimiter: "^|^"
  environments:
    staging:
      target: "https://staging.example.com"
      headers:
        Authorization: "Bearer {{ $processEnvironment.nnnn_AUTH_TOKEN }}"
  plugins:
    expect: {}

scenarios:
  - name: "Test various non-successful API requests for Patch Product Order"
    flow:
      - log: "Attempting to patch with invalid order ID"
      - patch:
          url: "/productOrder/invalidOrderId"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{ $processEnvironment.nnnn_AUTH_TOKEN }}"
          json:
            order:
              appointment:
                date: "2021-06-07T12:47:00"
                hasSlot: true
                mandatoryType: "Permitido"
          expect:
            - statusCode: 404
            - hasProperty: "error"
      - think: 1
      - log: "Attempting to patch with invalid authorization token"
      - patch:
          url: "/productOrder/{{ order.Id }}"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer invalidtoken"
          json:
            order:
              appointment:
                date: "2021-06-07T12:47:00"
                hasSlot: true
                mandatoryType: "Permitido"
          expect:
            - statusCode: 401
            - hasProperty: "error"
      - think: 1
      - log: "Attempting to patch with malformed JSON body"
      - patch:
          url: "/productOrder/{{ order.Id }}"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{ $processEnvironment.nnnn_AUTH_TOKEN }}"
          body: "{malformedJson: true}"
          expect:
            - statusCode: 400
            - hasProperty: "error"
      - think: 1
      - log: "Attempting to patch with invalid data type for expected field"
      - patch:
          url: "/productOrder/{{ order.Id }}"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{ $processEnvironment.nnnn_AUTH_TOKEN }}"
          json:
            order:
              appointment:
                date: "not-a-date"
                hasSlot: "true"  # Corrected data type
                mandatoryType: "Permitido"
          expect:
            - statusCode: 422
            - hasProperty: "error"
      - think: 1
