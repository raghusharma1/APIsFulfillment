# ********RoostGPT********

# Test generated by RoostGPT for test sampleArtilleryEnv2 using AI Type  and AI Model 
# 
# Test generated for /productOrder/{order.Id}_patch for http method type PATCH in artillery framework
# RoostTestHash=9e8fcf3d77
# 
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.nnnn_API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1
  payload:
    path: "productOrder_order.Id_patch_others.csv"
    fields:
      - "order.Id"
      - "appointment.date"
      - "workOrderId"
    skipHeader: true
    delimiter: "^|^"
  plugins:
    expect: {}

scenarios:
  - name: "Test Scenario for Non-Success API Responses"
    flow:
      - log: "Attempting to patch product order with invalid order.Id"
      - patch:
          url: "/productOrder/{{ order.Id }}"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{ $processEnvironment.nnnn_AUTH_TOKEN }}"
          json:
            appointment:
              date: "{{ appointment.date }}"
              hasSlot: false
              mandatoryType: "Permitido"
              workOrderId: "{{ workOrderId }}"
          expect:
            - statusCode: 404
      - think: 2

      - log: "Attempting to patch product order with missing mandatory fields"
      - patch:
          url: "/productOrder/{{ order.Id }}"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{ $processEnvironment.nnnn_AUTH_TOKEN }}"
          json:
            appointment:
              date: "{{ appointment.date }}"
          expect:
            - statusCode: 400
      - think: 2

      - log: "Attempting to patch product order with invalid authentication"
      - patch:
          url: "/productOrder/{{ order.Id }}"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer invalid_token"
          json:
            appointment:
              date: "{{ appointment.date }}"
              hasSlot: true
              mandatoryType: "Permitido"
              workOrderId: "{{ workOrderId }}"
          expect:
            - statusCode: 401
      - think: 2

      - log: "Attempting to patch product order to an invalid URL"
      - patch:
          url: "/invalidUrl/{{ order.Id }}"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{ $processEnvironment.nnnn_AUTH_TOKEN }}"
          json:
            appointment:
              date: "{{ appointment.date }}"
              hasSlot: true
              mandatoryType: "Permitido"
              workOrderId: "{{ workOrderId }}"
          expect:
            - statusCode: 404
      - think: 2
