# ********RoostGPT********

# Test generated by RoostGPT for test sampleArtilleryEnv2 using AI Type  and AI Model 
# 
# Test generated for /productOrder/{order.Id}_patch for http method type PATCH in artillery framework
# RoostTestHash=9e8fcf3d77
# 
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.nnnn_API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1
  payload:
    path: "productOrder_order.Id_patch_others.csv"
    fields:
      - "order.Id"
      - "associatedDocument"
      - "correlationOrder"
      - "issue.code"
      - "issue.observation"
      - "issue.updateDate"
      - "updateDate"
    skipHeader: true
    delimiter: "^|^"
  plugins:
    expect: {}

scenarios:
  - name: "Patch Product Order By Id with various non-success cases"
    flow:
      - log: "Testing with invalid 'order.Id' in URL"
      - patch:
          url: "/productOrder/invalidOrderId"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{ $processEnvironment.nnnn_AUTH_TOKEN }}"
          json:
            order: 
              issue: 
                code: "7016"
                observation: "Invalid ID test case"
                updateDate: "2023-01-01T00:00:00Z"
          expect:
            - statusCode: 404
      - think: 1

      - log: "Testing with missing mandatory fields in the payload"
      - patch:
          url: "/productOrder/{{ order.Id }}"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{ $processEnvironment.nnnn_AUTH_TOKEN }}"
          json:
            order: {}
          expect:
            - statusCode: 400
      - think: 1

      - log: "Testing with invalid authentication token"
      - patch:
          url: "/productOrder/{{ order.Id }}"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer invalidtoken"
          json:
            order:
              issue:
                code: "7016"
                observation: "Testing invalid auth"
                updateDate: "2023-01-01T00:00:00Z"
          expect:
            - statusCode: 401
      - think: 1

      - log: "Testing with invalid content type"
      - patch:
          url: "/productOrder/{{ order.Id }}"
          headers:
            Content-Type: "text/plain"
            Authorization: "Bearer {{ $processEnvironment.nnnn_AUTH_TOKEN }}"
          body: "This is a plain text body, not JSON."
          expect:
            - statusCode: 415
      - think: 1

      - log: "Testing with outdated 'issue.updateDate' in payload"
      - patch:
          url: "/productOrder/{{ order.Id }}"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{ $processEnvironment.nnnn_AUTH_TOKEN }}"
          json:
            order:
              issue:
                code: "7016"
                observation: "Outdated update date"
                updateDate: "2020-01-01T00:00:00Z"
          expect:
            - statusCode: 422
      - think: 1
