# ********RoostGPT********

# Test generated by RoostGPT for test sampleArtilleryEnv2 using AI Type  and AI Model 
# 
# Test generated for /productOrder/{order.Id}_patch for http method type PATCH in artillery framework
# RoostTestHash=9e8fcf3d77
# 
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.nnnn_API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1
  payload:
    path: "productOrder_order.Id_patch_others.csv"
    fields:
      - "order.Id"
      - "associatedDocument"
      - "correlationOrder"
      - "issue.action"
      - "issue.code"
      - "issue.observation"
      - "issue.updateDate"
    skipHeader: true
    delimiter: "^|^"
  environments:
    staging:
      target: "https://staging.example.com"
      headers:
        Authorization: "Bearer {{ $processEnvironment.nnnn_AUTH_TOKEN }}"
    production:
      target: "https://api.example.com"
      headers:
        Authorization: "Bearer {{ $processEnvironment.nnnn_AUTH_TOKEN }}"
  plugins:
    expect: {}

scenarios:
  - name: "Test Non-Success API Responses for Patch Product Order"
    flow:
      - log: "Testing invalid order ID"
      - patch:
          url: "/productOrder/invalidOrderId"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{ $processEnvironment.nnnn_AUTH_TOKEN }}"
          json:
            order:
              appointment:
                date: "2021-06-07T12:47:00"
                hasSlot: true
                mandatoryType: "Permitido"
                workOrderId: ""
              associatedDocument: "VTT001"
              correlationOrder: "10"
              issue:
                action: "fechar"
                code: "7016"
                observation: "Reagendamento por ausÃªncia"
                updateDate: "2021-12-09T15:20:00"
          expect:
            statusCode: 404
      - think: 1
      - log: "Testing with unauthorized access"
      - patch:
          url: "/productOrder/{{ order.Id }}"
          headers:
            Content-Type: "application/json"
          json:
            order:
              appointment:
                date: "2021-06-07T12:47:00"
                hasSlot: false
                mandatoryType: "Permitido"
                workOrderId: "12345"
              associatedDocument: "VTT002"
              correlationOrder: "11"
              issue:
                action: "fechar"
                code: "7029"
                observation: "Unauthorized request test"
                updateDate: "2021-12-10T11:30:00"
          expect:
            statusCode: 401
      - think: 1
      - log: "Testing with malformed JSON payload"
      - patch:
          url: "/productOrder/{{ order.Id }}"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{ $processEnvironment.nnnn_AUTH_TOKEN }}"
          body: "{'order': 'invalid': true}"
          expect:
            statusCode: 400
      - think: 1
      - log: "Testing with invalid content type"
      - patch:
          url: "/productOrder/{{ order.Id }}"
          headers:
            Content-Type: "text/plain"
            Authorization: "Bearer {{ $processEnvironment.nnnn_AUTH_TOKEN }}"
          json:
            order:
              appointment:
                date: "2021-06-07T12:47:00"
                hasSlot: true
                mandatoryType: "Obrigatorio"
                workOrderId: "67890"
              associatedDocument: "VTT003"
              correlationOrder: "12"
              issue:
                action: "fechar"
                code: "7031"
                observation: "Invalid content type test"
                updateDate: "2021-12-11T16:45:00"
          expect:
            statusCode: 415
      - think: 1
